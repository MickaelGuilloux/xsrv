### MONGODB ###

- name: set distribution for mongodb APT repository
  set_fact:
    mongodb_apt_repo_distribution: "{{ item.apt_repository }}"
  when: ansible_facts.distribution_release == "{{ item.distribution_release }}" # noqa no-jinja-when
  with_items:
    - apt_repository: stretch
      distribution_release: stretch
    - apt_repository: buster
      distribution_release: buster
    - apt_repository: buster
      distribution_release: bullseye

- name: remove old mongodb key from APT keyring
  apt_key:
    id: "E162F504A20CDF15827F718D4B7C549A058F8B6B"
    state: absent
  ignore_errors: "{{ ansible_check_mode }}"

- name: add mongodb APT signing keys
  copy:
    src: usr_share_keyrings_mongodb.gpg
    dest: /usr/share/keyrings/mongodb.gpg
    owner: root
    group: root
    mode: 0644
  notify: update apt cache

- name: add mongodb APT repository
  template:
    src: etc_apt_sources.list.d_mongodb.list.j2
    dest: /etc/apt/sources.list.d/mongodb.list
    owner: root
    group: root
    mode: 0644
  notify: update apt cache

# update APT cache for mongodb packages to become available
- name: apply configuration (flush handlers)
  meta: flush_handlers

- name: install mongodb-org package
  apt:
    package: mongodb-org
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

### SERVICE ###

- name: enable/disable start/stop mongodb service
  systemd:
    name: mongod
    enabled: "{{ graylog_enable_service }}"
    state: "{{ 'started' if graylog_enable_service else 'stopped' }}"
    daemon_reload: yes
  ignore_errors: "{{ ansible_check_mode }}"
