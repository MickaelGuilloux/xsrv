---

##### PACKAGES #####

- name: install required packages for tt-rss
  apt:
    state: present
    update_cache: yes
    cache_valid_time: 900
    package:
      - php7.3-common
      - php7.3-xml
      - php7.3-json
      - php7.3-intl
      - php7.3-mbstring
      - php7.3-curl
      - php7.3-gd
      - php7.3-opcache
      - php-zip # required for data_migration plugin

##### FAIL2BAN #####

- name: copy tt-rss fail2ban jail config
  template:
    src: etc_fail2ban_jail.d_tt-rss.conf.j2
    dest: /etc/fail2ban/jail.d/tt-rss.conf
    mode: 0600
  tags: fail2ban
  notify: reload fail2ban

- name: copy fail2ban tt-rss-auth filter
  template:
    src: etc_fail2ban_filter.d_tt-rss-auth.conf.j2
    dest: /etc/fail2ban/filter.d/tt-rss-auth.conf
    mode: 0600
  tags: fail2ban
  notify: reload fail2ban

##### BACKUPS #####

# there are no files to backup
# database dumps are managed by the postgresql/mariadb role

##### TT-RSS INSTALLATION #####

- name: clone/upgrade tt-rss
  git:
    repo: https://git.tt-rss.org/git/tt-rss.git
    dest: "{{ tt_rss_install_dir }}"
    version: '{{ tt_rss_version }}'
    accept_hostkey: yes
    force: yes
    umask: '027'
  no_log: true # very verbose in diff mode
  environment:
    GIT_HTTP_USER_AGENT: "Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0"
# (spoof git user agent to workaround buggy rate limiting on tt-rss.org)
# https://discourse.tt-rss.org/t/gitlab-config-problems-trailing-slash-in-clone-urls/192
# https://discourse.tt-rss.org/t/rate-limiting-for-some-git-related-requests/32

# TODO not idempotent
- name: give required read permissions to the web server
  file:
    path: "{{ tt_rss_install_dir }}"
    group: www-data
    recurse: yes
    mode: g+rX

- name: give required write permissions to the web server
  file:
    path: "{{ tt_rss_install_dir }}/{{ item }}"
    state: directory
    group: www-data
    mode: g=rwX
  with_items:
    - cache
    - cache/export
    - cache/images
    - cache/feeds
    - cache/upload
    - feed-icons
    - lock

- name: copy tt-rss configuration file
  template:
    src: var_www_tt-rss_config.php.j2
    dest: "{{ tt_rss_install_dir }}/config.php"
    owner: root
    group: www-data
    mode: 0640

######## INITIAL DB POPULATION

- name: import tt-rss database schema to mysql
  shell: mysql -u root -h "{{ tt_rss_db_host }}" "{{ tt_rss_db_name }}" < "{{ tt_rss_install_dir }}/schema/ttrss_schema_mysql.sql"
  when:
    - (ansible_local.tt_rss.general.db_imported is not defined) or (not ansible_local.tt_rss.general.db_imported)
    - tt_rss_db_type == 'mysql'

# TODO OPTIMIZE use mysql_query module in next ansible releases
- name: update tt-rss admin account in mysql database
  command: >
    mysql -u root -h "{{ tt_rss_db_host }}" "{{ tt_rss_db_name }}"
    --execute="UPDATE ttrss_users SET login = '{{ tt_rss_user }}',
    pwd_hash = 'MODE2:{{ (tt_rss_password_salt + tt_rss_password) | hash('sha256') }}',
    salt     = '{{ tt_rss_password_salt }}'
    WHERE id = 1;"
  when:
    - (ansible_local.tt_rss.general.db_imported is not defined) or (not ansible_local.tt_rss.general.db_imported)
    - tt_rss_db_type == 'mysql'

- name: import tt-rss database schema to postgresql
  postgresql_query:
    login_host: "{{ tt_rss_db_host }}"
    login_user: "{{ tt_rss_db_user }}"
    login_password: "{{ tt_rss_db_password }}"
    db: "{{ tt_rss_db_name }}"
    path_to_script: "{{ tt_rss_install_dir }}/schema/ttrss_schema_pgsql.sql"
  when:
    - (ansible_local.tt_rss.general.db_imported is not defined) or (not ansible_local.tt_rss.general.db_imported)
    - tt_rss_db_type == 'pgsql'

- name: update tt-rss admin account in mysql database
  postgresql_query:
    login_host: "{{ tt_rss_db_host }}"
    login_user: "{{ tt_rss_db_user }}"
    login_password: "{{ tt_rss_db_password }}"
    db: "{{ tt_rss_db_name }}"
    query: UPDATE ttrss_users SET login = '{{ tt_rss_user }}', pwd_hash = 'MODE2:{{ (tt_rss_password_salt + tt_rss_password) | hash('sha256') }}', salt     = '{{ tt_rss_password_salt }}' WHERE id = 1; # noqa 204
  when:
    - (ansible_local.tt_rss.general.db_imported is not defined) or (not ansible_local.tt_rss.general.db_imported)
    - tt_rss_db_type == 'pgsql'

####### FINALIZE

- name: setup tt-rss feed update cron job
  cron:
    user: www-data
    cron_file: '/etc/cron.d/tt-rss'
    name: ttrss_update
    hour: '*'
    minute: '0'
    job: '/usr/bin/php {{ tt_rss_install_dir }}/update.php --feeds --quiet'

- name: create ansible local facts directory
  file:
    path: "/etc/ansible/facts.d"
    state: directory
    mode: 0755

- name: create tt-rss installed fact file
  template:
    src: etc_ansible_facts.d_tt_rss.fact.j2
    dest: /etc/ansible/facts.d/tt_rss.fact
    mode: 0644
