---
### configuration variables for my.example.org
### vault_* variables are stored encrypted in my.example.org.vault.yml

# administrator/sudo account username/password
ansible_user: "{{ vault_ansible_user }}"
ansible_become_pass: "{{ vault_ansible_become_pass }}"
ansible_ssh_port: 22

##### NEXTCLOUD #####
# see roles/nextcloud/defaults/main.yml
nextcloud_fqdn: "cloud.CHANGEME.org"

##### TT-RSS #####
# see roles/tt_rss/defaults/main.yml
tt_rss_fqdn: "rss.CHANGEME.org"

##### SHAARLI #####
# see roles/shaarli/defaults/main.yml
shaarli_fqdn: "links.CHANGEME.org"

##### GITEA #####
# see roles/gitea/defaults/main.yml
gitea_fqdn: "git.CHANGEME.org"

##### TRANSMISSION #####
# see roles/transmission/defaults/main.yml
transmission_fqdn: "torrent.CHANGEME.org"

#### OPENLDAP ####
# see roles/openldap/defaults/main.yml
openldap_fqdn: "ldap.CHANGEME.org"
openldap_base_dn: "dc=CHANGEME,dc=org"


##### FIREWALL/FAIL2BAN #####
# see roles/common/defaults/main.yml

# alias for LAN addresses (CIDR notation,comma-separated values)
firehol_alias_lan: "10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"

# Firewall rules
# By default a single global network chain is defined (traffic on any interface, from any source)
# Restrict traffic to individual source/destination IPs in earch rule's src/dst value
# Or create additional network definitions for more complex setups.
firehol_networks:
  - name: "global" # a name for this rule set
    src: "any" # traffic to/from any IP address
    interface: "any" # traffic to/from any network interface
    policy: "RETURN" # policy to apply for traffic that matches no rules match (one of DROP/RETURN/ACCEPT/REJECT)
    allow_input: # incoming traffic
      - { name: "ssh", src: "any" } # ssh from anywhere
      - { name: "netdata", src: "{{ firehol_alias_lan }}" } # monitoring dashboard
      - { name: "http", src: "any" } # web server
      - { name: "https", src: "any" } # web server
      # - { name: "samba", src: "{{ firehol_alias_lan }}" } # samba file sharing
      # - { name: "mumble", src: "{{ firehol_alias_lan }}" } # mumble voip server
      # - { name: "ping", src: "{{ firehol_alias_lan }}" } # incoming ICMP pings
      # - { name: "pulseaudio", src: "{{ firehol_alias_lan }}" } # pulseaudio sound server
      # - { name: "mdns", src: "any" } # avahi/zeroconf/MDNS/DNS-SD/uPnP, requires src: any
      # - { name: "multicast", src: "any" } # avahi/zeroconf/MDNS/DNS-SD/uPnP, requires src=any
      # - { name: "sshcustom", src: "any" } # SSH server on custom port
      # - { name: "transmission", src: "any" } # incoming bittorrent/transmission peer connections
      # - { name: "rtc", src: "any", } # jitsi meet audio/video conferencing
      # - { name: "ldap", src: "{{ firehol_alias_lan }}", } # LDAP (plain/insecure) from LAN
      # - { name: "ldaps", src: "{{ firehol_alias_lan }}", } # LDAP (SSL/secure) from LAN
    allow_output: # outgoing connections
      - { name: "dns", dst: "any" } # DNS queries to anywhere
      - { name: "ntp", dst: "any" } # time/date synchronization
      - { name: "dhcp", dst: "{{ firehol_alias_lan }}" } # DHCP requests on LAN
      - { name: "http", dst: "any" } # outgoing HTTP requests
      - { name: "https", dst: "any" } # outgoing HTTPS requests
      - { name: "ping", dst: "any" } # outgoing ICMP pings
      - { name: "submission", dst: "any" } # outgoing mail/port 587
      # - { name: "samba", dst: "{{ firehol_alias_lan }}" } # samba file sharing
      # - { name: "imaps", dst: "any" } # nextcloud mail
      # - { name: "smtps", dst: "any" } # nextcloud mail
      # - { name: "ssh", dst: "any" } # ssh/git access to anywhere
      # - { name: "all", dst: "any" } # allow ALL outgoing connections (required for bittorrent/transmission)


##### NETDATA MONITORING SYSTEM #####

### NETDATA CHECKS ###
# Process checks
netdata_process_checks:
  - { name: ssh, min_count: 1, interval: 20} # SSH server
  - { name: time, min_count: 1, interval: 20} # NTP daemon
  - { name: fail2ban, min_count: 1, interval: 20} # bruteforce prevention/IPS
#   - { name: httpd, min_count: 1, interval: 20} # web server
#   - { name: sql, min_count: 1, interval: 20} # SQL database engine
#   - { name: gitea, min_count: 1, interval: 20} # gitea self-hosted software forge
#   - { name: ezstream, min_count: 1, interval: 20} # icecast/ezstream media streaming server
#   - { name: murmurd, min_count: 1, interval: 20} # mumble VoIP server
#   - { name: pulseaudio, min_count: 1, interval: 20} # pulseaudio network sound server
#   - { name: auth, min_count: 1, interval: 20} # openldap server
#   - { name: gitlab_runner, min_count: 1, interval: 20} # gitlab CI job runner

netdata_modtime_checks:
  - name: rsnapshot_last_success # check successful daily backups
    path: /var/log/rsnapshot_last_success
    age_warning: 88200
    age_critical: 90000

### EXTRA MODULES ###
# yes/no: automatically restart services that require it after an upgrade
needrestart_autorestart_services: yes
